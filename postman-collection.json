{
  "info": {
    "name": "Splunk MCP Server API",
    "description": "Postman collection for testing the Splunk MCP Server with SSE transport and FastMCP pattern",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8756",
      "type": "string"
    },
    {
      "key": "sessionId",
      "value": "{{$randomUUID}}",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health Check",
      "item": [
        {
          "name": "Root Endpoint",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/",
              "host": ["{{baseUrl}}"],
              "path": [""]
            },
            "description": "Test the root endpoint - should return 200 OK"
          },
          "response": []
        },
        {
          "name": "SSE Endpoint",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "text/event-stream"
              },
              {
                "key": "Cache-Control",
                "value": "no-cache"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/sse",
              "host": ["{{baseUrl}}"],
              "path": ["sse"]
            },
            "description": "Test the SSE endpoint for Server-Sent Events"
          },
          "response": []
        }
      ]
    },
    {
      "name": "MCP Protocol",
      "item": [
        {
          "name": "Initialize Connection",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 1,\n  \"method\": \"initialize\",\n  \"params\": {\n    \"protocolVersion\": \"2024-11-05\",\n    \"capabilities\": {\n      \"tools\": {}\n    },\n    \"clientInfo\": {\n      \"name\": \"postman-test\",\n      \"version\": \"1.0.0\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/messages/?session_id={{sessionId}}",
              "host": ["{{baseUrl}}"],
              "path": ["messages", ""],
              "query": [
                {
                  "key": "session_id",
                  "value": "{{sessionId}}"
                }
              ]
            },
            "description": "Initialize MCP connection"
          },
          "response": []
        },
        {
          "name": "List Tools",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 2,\n  \"method\": \"tools/list\",\n  \"params\": {}\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/messages/?session_id={{sessionId}}",
              "host": ["{{baseUrl}}"],
              "path": ["messages", ""],
              "query": [
                {
                  "key": "session_id",
                  "value": "{{sessionId}}"
                }
              ]
            },
            "description": "List available tools (should return splunk_search)"
          },
          "response": []
        },
        {
          "name": "List Resources",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 3,\n  \"method\": \"resources/list\",\n  \"params\": {}\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/messages/?session_id={{sessionId}}",
              "host": ["{{baseUrl}}"],
              "path": ["messages", ""],
              "query": [
                {
                  "key": "session_id",
                  "value": "{{sessionId}}"
                }
              ]
            },
            "description": "List available resources"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Splunk Search Tool",
      "item": [
        {
          "name": "Basic Search - Index Main",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 4,\n  \"method\": \"tools/call\",\n  \"params\": {\n    \"name\": \"splunk_search\",\n    \"arguments\": {\n      \"query\": \"index=main\",\n      \"earliest_time\": \"-1h\",\n      \"latest_time\": \"now\",\n      \"max_results\": 10\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/messages/?session_id={{sessionId}}",
              "host": ["{{baseUrl}}"],
              "path": ["messages", ""],
              "query": [
                {
                  "key": "session_id",
                  "value": "{{sessionId}}"
                }
              ]
            },
            "description": "Basic search in main index"
          },
          "response": []
        },
        {
          "name": "Search Kubernetes Index",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 5,\n  \"method\": \"tools/call\",\n  \"params\": {\n    \"name\": \"splunk_search\",\n    \"arguments\": {\n      \"query\": \"index=kubernetes\",\n      \"earliest_time\": \"-24h\",\n      \"latest_time\": \"now\",\n      \"max_results\": 5\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/messages/?session_id={{sessionId}}",
              "host": ["{{baseUrl}}"],
              "path": ["messages", ""],
              "query": [
                {
                  "key": "session_id",
                  "value": "{{sessionId}}"
                }
              ]
            },
            "description": "Search kubernetes index with recent data"
          },
          "response": []
        },
        {
          "name": "Stats Query - Count by Host",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 6,\n  \"method\": \"tools/call\",\n  \"params\": {\n    \"name\": \"splunk_search\",\n    \"arguments\": {\n      \"query\": \"index=kubernetes | stats count by host\",\n      \"earliest_time\": \"-24h\",\n      \"latest_time\": \"now\",\n      \"max_results\": 20\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/messages/?session_id={{sessionId}}",
              "host": ["{{baseUrl}}"],
              "path": ["messages", ""],
              "query": [
                {
                  "key": "session_id",
                  "value": "{{sessionId}}"
                }
              ]
            },
            "description": "Statistical query to count events by host"
          },
          "response": []
        },
        {
          "name": "Timechart Query",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 7,\n  \"method\": \"tools/call\",\n  \"params\": {\n    \"name\": \"splunk_search\",\n    \"arguments\": {\n      \"query\": \"index=kubernetes | timechart span=1h count\",\n      \"earliest_time\": \"-24h\",\n      \"latest_time\": \"now\",\n      \"max_results\": 50\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/messages/?session_id={{sessionId}}",
              "host": ["{{baseUrl}}"],
              "path": ["messages", ""],
              "query": [
                {
                  "key": "session_id",
                  "value": "{{sessionId}}"
                }
              ]
            },
            "description": "Time-based analysis with hourly buckets"
          },
          "response": []
        },
        {
          "name": "Metadata Query - Sources",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 8,\n  \"method\": \"tools/call\",\n  \"params\": {\n    \"name\": \"splunk_search\",\n    \"arguments\": {\n      \"query\": \"| metadata type=sources | eval recentTime=strftime(recentTime,\\\"%Y-%m-%d %H:%M:%S\\\") | sort - totalCount\",\n      \"earliest_time\": \"-24h\",\n      \"latest_time\": \"now\",\n      \"max_results\": 20\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/messages/?session_id={{sessionId}}",
              "host": ["{{baseUrl}}"],
              "path": ["messages", ""],
              "query": [
                {
                  "key": "session_id",
                  "value": "{{sessionId}}"
                }
              ]
            },
            "description": "Get metadata about data sources"
          },
          "response": []
        },
        {
          "name": "Search with Custom Timeout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 9,\n  \"method\": \"tools/call\",\n  \"params\": {\n    \"name\": \"splunk_search\",\n    \"arguments\": {\n      \"query\": \"index=kubernetes | head 3 | table _time, host, source\",\n      \"earliest_time\": \"-1h\",\n      \"latest_time\": \"now\",\n      \"max_results\": 3,\n      \"timeout\": 60\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/messages/?session_id={{sessionId}}",
              "host": ["{{baseUrl}}"],
              "path": ["messages", ""],
              "query": [
                {
                  "key": "session_id",
                  "value": "{{sessionId}}"
                }
              ]
            },
            "description": "Search with custom timeout and table formatting"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Error Testing",
      "item": [
        {
          "name": "Invalid Query",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 10,\n  \"method\": \"tools/call\",\n  \"params\": {\n    \"name\": \"splunk_search\",\n    \"arguments\": {\n      \"query\": \"index=kubernetes | invalid_command\",\n      \"earliest_time\": \"-1h\",\n      \"latest_time\": \"now\",\n      \"max_results\": 10\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/messages/?session_id={{sessionId}}",
              "host": ["{{baseUrl}}"],
              "path": ["messages", ""],
              "query": [
                {
                  "key": "session_id",
                  "value": "{{sessionId}}"
                }
              ]
            },
            "description": "Test error handling with invalid SPL command"
          },
          "response": []
        },
        {
          "name": "Empty Query",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 11,\n  \"method\": \"tools/call\",\n  \"params\": {\n    \"name\": \"splunk_search\",\n    \"arguments\": {\n      \"query\": \"\",\n      \"earliest_time\": \"-1h\",\n      \"latest_time\": \"now\",\n      \"max_results\": 10\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/messages/?session_id={{sessionId}}",
              "host": ["{{baseUrl}}"],
              "path": ["messages", ""],
              "query": [
                {
                  "key": "session_id",
                  "value": "{{sessionId}}"
                }
              ]
            },
            "description": "Test error handling with empty query"
          },
          "response": []
        },
        {
          "name": "Invalid Tool Name",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 12,\n  \"method\": \"tools/call\",\n  \"params\": {\n    \"name\": \"nonexistent_tool\",\n    \"arguments\": {\n      \"query\": \"index=main\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/messages/?session_id={{sessionId}}",
              "host": ["{{baseUrl}}"],
              "path": ["messages", ""],
              "query": [
                {
                  "key": "session_id",
                  "value": "{{sessionId}}"
                }
              ]
            },
            "description": "Test error handling with invalid tool name"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Advanced Queries",
      "item": [
        {
          "name": "Complex Analytics Query",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 13,\n  \"method\": \"tools/call\",\n  \"params\": {\n    \"name\": \"splunk_search\",\n    \"arguments\": {\n      \"query\": \"index=kubernetes | stats count as event_count, dc(host) as unique_hosts, values(sourcetype) as source_types by source | sort - event_count\",\n      \"earliest_time\": \"-24h\",\n      \"latest_time\": \"now\",\n      \"max_results\": 15\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/messages/?session_id={{sessionId}}",
              "host": ["{{baseUrl}}"],
              "path": ["messages", ""],
              "query": [
                {
                  "key": "session_id",
                  "value": "{{sessionId}}"
                }
              ]
            },
            "description": "Complex analytics with multiple statistical functions"
          },
          "response": []
        },
        {
          "name": "Search with Eval and Where",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 14,\n  \"method\": \"tools/call\",\n  \"params\": {\n    \"name\": \"splunk_search\",\n    \"arguments\": {\n      \"query\": \"index=kubernetes | eval hour=strftime(_time, \\\"%H\\\") | where hour >= 12 | stats count by hour | sort hour\",\n      \"earliest_time\": \"-24h\",\n      \"latest_time\": \"now\",\n      \"max_results\": 24\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/messages/?session_id={{sessionId}}",
              "host": ["{{baseUrl}}"],
              "path": ["messages", ""],
              "query": [
                {
                  "key": "session_id",
                  "value": "{{sessionId}}"
                }
              ]
            },
            "description": "Search with eval and where clauses for time-based filtering"
          },
          "response": []
        },
        {
          "name": "Top Command Query",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 15,\n  \"method\": \"tools/call\",\n  \"params\": {\n    \"name\": \"splunk_search\",\n    \"arguments\": {\n      \"query\": \"index=kubernetes | top limit=10 sourcetype\",\n      \"earliest_time\": \"-24h\",\n      \"latest_time\": \"now\",\n      \"max_results\": 10\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/messages/?session_id={{sessionId}}",
              "host": ["{{baseUrl}}"],
              "path": ["messages", ""],
              "query": [
                {
                  "key": "session_id",
                  "value": "{{sessionId}}"
                }
              ]
            },
            "description": "Find top sourcetypes in kubernetes index"
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Generate a new session ID for each request if not already set",
          "if (!pm.collectionVariables.get('sessionId')) {",
          "    pm.collectionVariables.set('sessionId', pm.variables.replaceIn('{{$randomUUID}}'));",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Basic response validation",
          "pm.test('Status code is 200 or 202', function () {",
          "    pm.expect(pm.response.code).to.be.oneOf([200, 202, 307]);",
          "});",
          "",
          "// Check if response is JSON for MCP protocol requests",
          "if (pm.request.url.path.includes('messages')) {",
          "    pm.test('Response is JSON', function () {",
          "        pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
          "    });",
          "    ",
          "    // Parse and validate JSON-RPC response structure",
          "    if (pm.response.code === 202) {",
          "        try {",
          "            const jsonData = pm.response.json();",
          "            pm.test('Valid JSON-RPC response', function () {",
          "                pm.expect(jsonData).to.have.property('jsonrpc');",
          "                pm.expect(jsonData.jsonrpc).to.eql('2.0');",
          "            });",
          "        } catch (e) {",
          "            console.log('Response is not JSON or parsing failed:', e);",
          "        }",
          "    }",
          "}",
          "",
          "// Log response for debugging",
          "console.log('Response Status:', pm.response.code);",
          "console.log('Response Body:', pm.response.text());"
        ]
      }
    }
  ]
}
