version: '3.8'

services:
  splunk-mcp-server:
    build: .
    container_name: splunk-mcp-server
    environment:
      # Splunk Configuration - Set these values
      - SPLUNK_HOST=${SPLUNK_HOST:-your-splunk-host.com}
      - SPLUNK_PORT=${SPLUNK_PORT:-8089}
      - SPLUNK_USERNAME=${SPLUNK_USERNAME:-admin}
      - SPLUNK_PASSWORD=${SPLUNK_PASSWORD:-changeme}
      - SPLUNK_SCHEME=${SPLUNK_SCHEME:-https}
      - SPLUNK_VERIFY_SSL=${SPLUNK_VERIFY_SSL:-false}
      - SPLUNK_TIMEOUT=${SPLUNK_TIMEOUT:-30}
      
      # MCP Server Configuration
      - MCP_SERVER_NAME=${MCP_SERVER_NAME:-splunk-mcp-server}
      - MCP_VERSION=${MCP_VERSION:-1.0.0}
      - MCP_MAX_RESULTS_DEFAULT=${MCP_MAX_RESULTS_DEFAULT:-100}
      - MCP_SEARCH_TIMEOUT=${MCP_SEARCH_TIMEOUT:-300}
      
      # Logging
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    
    # Port mapping for SSE transport
    ports:
      - "8000:8000"
    
    # For stdio communication with MCP clients (kept for backward compatibility)
    stdin_open: true
    tty: true
    
    # Restart policy
    restart: unless-stopped
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    
    # Health check
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.path.insert(0, 'src'); from src.config import get_config; get_config()"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    
    # Labels for organization
    labels:
      - "com.example.service=splunk-mcp-server"
      - "com.example.version=1.0.0"
      - "com.example.description=Splunk MCP Server for log analysis"

  # Optional: Add a test service to verify connectivity
  splunk-mcp-test:
    build: .
    container_name: splunk-mcp-test
    environment:
      - SPLUNK_HOST=${SPLUNK_HOST:-your-splunk-host.com}
      - SPLUNK_PORT=${SPLUNK_PORT:-8089}
      - SPLUNK_USERNAME=${SPLUNK_USERNAME:-admin}
      - SPLUNK_PASSWORD=${SPLUNK_PASSWORD:-changeme}
      - SPLUNK_SCHEME=${SPLUNK_SCHEME:-https}
      - SPLUNK_VERIFY_SSL=${SPLUNK_VERIFY_SSL:-false}
      - SPLUNK_TIMEOUT=${SPLUNK_TIMEOUT:-30}
    command: ["python", "test_server.py"]
    profiles:
      - test
    depends_on:
      - splunk-mcp-server
